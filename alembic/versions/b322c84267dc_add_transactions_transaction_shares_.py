"""Add transactions, transaction_shares, expense_categories tables

Revision ID: b322c84267dc
Revises: d75094b7f6f0
Create Date: 2025-06-23 19:59:05.908318

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b322c84267dc'
down_revision: Union[str, None] = 'd75094b7f6f0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_name', table_name='users')
    op.drop_index('ix_users_telegram_id', table_name='users')
    op.drop_index('ix_friends_id', table_name='friends')
    op.drop_table('friends')
    op.drop_index('ix_groups_id', table_name='groups')
    op.drop_index('ix_groups_name', table_name='groups')
    op.drop_index('ix_group_members_id', table_name='group_members')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group_members',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='group_members_group_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='group_members_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='group_members_pkey')
    )
    op.create_index('ix_group_members_id', 'group_members', ['id'], unique=False)
    op.create_table('groups',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='groups_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='groups_pkey')
    )
    op.create_index('ix_groups_name', 'groups', ['name'], unique=False)
    op.create_index('ix_groups_id', 'groups', ['id'], unique=False)
    op.create_table('friends',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('friend_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], name='friends_friend_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='friends_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='friends_pkey'),
    sa.UniqueConstraint('user_id', 'friend_id', name='_user_friend_uc')
    )
    op.create_index('ix_friends_id', 'friends', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('telegram_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_telegram_id', 'users', ['telegram_id'], unique=True)
    op.create_index('ix_users_name', 'users', ['name'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    # ### end Alembic commands ###
