# src/schemas/group.py
# -----------------------------------------------------------------------------
# –°–•–ï–ú–´ Pydantic: Group
# -----------------------------------------------------------------------------

from __future__ import annotations

from enum import Enum
from typing import Optional, List
from datetime import date, datetime

from pydantic import BaseModel, Field

from .group_member import GroupMemberOut


class GroupStatusEnum(str, Enum):
    active = "active"
    archived = "archived"


class GroupSettleAlgoEnum(str, Enum):
    greedy = "greedy"
    pairs = "pairs"


class GroupCreate(BaseModel):
    name: str = Field(..., description="–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã")
    # –ø—Ä–∏–Ω–∏–º–∞–µ–º –∏ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, –∏ null ‚Äî —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏–≤–µ–¥—ë—Ç –∫–∞–∫ –∑–∞—Ö–æ—á–µ—Ç
    description: Optional[str] = Field(
        default=None,
        description="–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)",
    )
    owner_id: int = Field(..., description="ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ (–º–æ–∂–µ—Ç –ø–æ–¥–º–µ–Ω—è—Ç—å—Å—è current_user –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)")
    # –ù–æ–≤–æ–µ: –≤—ã–±–æ—Ä –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ; –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é greedy)
    settle_algorithm: Optional[GroupSettleAlgoEnum] = Field(
        default=GroupSettleAlgoEnum.greedy,
        description="–ê–ª–≥–æ—Ä–∏—Ç–º –≤–∑–∞–∏–º–æ–∑–∞—á—ë—Ç–∞: greedy|pairs (default: greedy)",
    )


class GroupOut(BaseModel):
    id: int = Field(..., description="ID –≥—Ä—É–ø–ø—ã")
    name: str = Field(..., description="–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã")
    # üîß –≥–ª–∞–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: —Ç–µ–ø–µ—Ä—å Optional[str]
    description: Optional[str] = Field(None, description="–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã")

    owner_id: Optional[int] = Field(None, description="ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≥—Ä—É–ø–ø—ã")

    status: GroupStatusEnum = Field(GroupStatusEnum.active, description="–°—Ç–∞—Ç—É—Å: active|archived")
    archived_at: Optional[datetime] = Field(None, description="–ú–æ–º–µ–Ω—Ç –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è (UTC)")
    deleted_at: Optional[datetime] = Field(None, description="Soft-delete –º–µ—Ç–∫–∞")
    end_date: Optional[date] = Field(None, description="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è/–ø–æ–µ–∑–¥–∫–∏")
    auto_archive: bool = Field(False, description="–ê–≤—Ç–æ–∞—Ä—Ö–∏–≤ –ø–æ—Å–ª–µ end_date (–µ—Å–ª–∏ –Ω–µ—Ç –¥–æ–ª–≥–æ–≤)")

    default_currency_code: str = Field("USD", description="–ö–æ–¥ –≤–∞–ª—é—Ç—ã ISO-4217 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")

    # –§–ª–∞–≥ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –≤–∑–∞–∏–º–æ–∑–∞—á—ë—Ç–∞
    settle_algorithm: GroupSettleAlgoEnum = Field(
        GroupSettleAlgoEnum.greedy,
        description="–ê–ª–≥–æ—Ä–∏—Ç–º –≤–∑–∞–∏–º–æ–∑–∞—á—ë—Ç–∞: greedy|pairs",
    )

    # ---- –ê–≤–∞—Ç–∞—Ä –≥—Ä—É–ø–ø—ã (URL) -------------------------------------------------
    avatar_url: Optional[str] = Field(None, description="URL –∞–≤–∞—Ç–∞—Ä–∞ –≥—Ä—É–ø–ø—ã")
    # -------------------------------------------------------------------------

    members: List[GroupMemberOut] = Field(default_factory=list, description="–°–æ—Å—Ç–∞–≤ –≥—Ä—É–ø–ø—ã")

    class Config:
        from_attributes = True
